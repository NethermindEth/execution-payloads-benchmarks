# Network to use
network: mainnet

# Pull images before execution
pull_images: true

# Grafana K6 image to use
images:
  k6: grafana/k6:latest
  alloy: grafana/alloy:latest

# Paths for the payloads csv file, work directory, and outputs directory
paths:
  payloads: ./payloads.jsonl # Each line is a payload request body
  fcus: ./fcus.jsonl # Each line is a forkchoice update request body
  work: ./work
  outputs: ./outputs

# Optional: Export options for scenarios metrics
export:
  # Prometheus remote write
  prometheus_remote_write:
    # Prometheus remote write endpoint
    endpoint: http://localhost:9090/api/v1/write
    # Optional: Basic auth for the remote write endpoint
    basic_auth:
      username: expb
      password: expb
    # Optional: Tags to add to the metrics
    tags:
      - key1=value1
      - key2=value2
  # Grafana Pyroscope
  pyroscope:
    # Pyroscope endpoint
    endpoint: http://localhost:4040
    # Optional: Basic auth for the remote write endpoint
    basic_auth:
      username: expb
      password: expb
    # Optional: Tags to add to the metrics
    tags:
      - key1=value1
      - key2=value2

# Resources for the docker container
resources:
  cpu: 4
  mem: 32g
  download_speed: 50mbit
  upload_speed: 15mbit

# Scenarios to execute
scenarios:
  # Scenario name
  example:
    # Required: Client name
    client: nethermind
    # Required: Snapshot directory for the selected client and network
    snapshot_dir: ./snapthots/nethermind
    # Required: Number of payloads to run
    amount: 100
    # Optional: Duration of the scenario. Default is 10 minutes.
    duration: 10m
    # Optional: Number of payloads to skip from the payloads file
    skip: 0
    # Optional: Number of payloads to execute as warmup(no metrics will be collected for those)
    warmup: 0
    # Optional: Client image
    image: ethpandaops/nethermind:performance
    # Optional: Client extra flags
    extra_flags:
      - --flag1=value1
    # Optional: Extra environment variables
    extra_env:
      KEY1: VALUE1
    # Optional: Extra volumes to mount into the docker container
    extra_volumes:
      # Volume name
      volume1:
        # Volume bind path inside the container
        bind: /extra_volume1
        # Optional: Host path on the host, if not provided the test output directory will be used as base path plus the volume name
        source: ./extra_volume1
        # Optional: Volume mode
        mode: rw
    # Optional: Commands to run in the docker container during the test execution
    # These will be executed using `docker exec` after the execution client is started and stopped once the test is done
    # Each command will be executed in a separate thread which can affect main process performance when too many commands
    extra_commands:
      - ./extra_command1
